name: Update GitHub Trending Data

on:
  # 每周一凌晨2点自动运行
  schedule:
    - cron: "0 2 * * 1"
  # 支持手动触发
  workflow_dispatch:
  # 当有代码推送到main分支时也运行
  push:
    branches: [main]

jobs:
  update-data:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.check-changes.outputs.changes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 获取完整历史记录，以便后续提交
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run data fetching script
        run: |
          cd scripts
          python fetch_trending.py
        env:
          # 设置超时时间
          PYTHONUNBUFFERED: 1

      - name: Run data processing script
        run: |
          cd scripts
          python process_data.py
        env:
          PYTHONUNBUFFERED: 1

      - name: Check for data changes
        id: check-changes
        run: |
          git add data/
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push if changes exist
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "chore: update GitHub trending data [skip ci]"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Create success status
        if: steps.check-changes.outputs.changes == 'true'
        run: echo "数据更新成功并已提交"

      - name: Create no-changes status
        if: steps.check-changes.outputs.changes == 'false'
        run: echo "数据无变化，无需提交"

  deploy:
    needs: update-data
    runs-on: ubuntu-latest
    if: needs.update-data.outputs.has-changes == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
